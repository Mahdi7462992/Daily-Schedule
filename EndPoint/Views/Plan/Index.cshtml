@model List<Plan>

@{
    ViewBag.Title = "Index";
    var times = Model.Select(m => m.Time).Distinct().OrderBy(t => t);
    var days = Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>();
}
<p>
    @Html.ActionLink("Create", "Create")
</p>
@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Family)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.website)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Family)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.website)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.PersonID }) |
            @Html.ActionLink("Details", "Details", new { id=item.PersonID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.PersonID })
        </td>
    </tr>
}

</table>*@

@*  <thead>
        <tr class="row100 head">
        <th class="column100 column1" data-column="column1"> @Html.DisplayNameFor(model => model.Name)</th>
        <th class="column100 column2" data-column="column2"> @Html.DisplayNameFor(model => model.Family)</th>
        <th class="column100 column3" data-column="column3"> @Html.DisplayNameFor(model => model.website)</th>
        <th class="column100 column3" data-column="column3">Change Info </th>
        </tr>
        </thead> *@

<div class="table100 ver3 m-b-110">
    <table data-vertable="ver2">
        <thead>
            <tr class="row100 head">
                <th>Day/Time</th>
                @foreach (var time in times)
                {
                    <th>@time</th>
                }
                <th>Change Info</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var day in days)
            {
                <tr class="row100">
                    <th class="column100">@day</th>
                    @foreach (var time in times)
                    {
                        var plan = Model.FirstOrDefault(p => p.DayOfWeek == day && p.Time == time);
                        <td>
                            @if (plan != null)
                            {
                                @plan.Detail
                            }
                        </td>
                    }

                    <td>
                        @{
                            var firstPlan = Model.FirstOrDefault(p => p.DayOfWeek == day);
                        }

                        @if (firstPlan != null)
                        {
                            @Html.ActionLink("Edit All", "Update", new { day = day }, new { @class = "btn btn-primary" })
                            @Html.ActionLink("Delete", "Delete", new { id = firstPlan.Id }, new { @class = "btn btn-danger" })
                            @Html.ActionLink("Details", "Details", new { day = day }, new { @class = "btn btn-info" })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@*   <tbody>
        @foreach (var item in Model)
        {
        <tr class="row100">
        <td class="column100 column1" data-column="column1">  @Html.DisplayFor(modelItem => item.Name)</td>
        <td class="column100 column1" data-column="column1">  @Html.DisplayFor(modelItem => item.Family)</td>
        <td class="column100 column1" data-column="column1">  @Html.DisplayFor(modelItem => item.website) </td>
        <td class="column100 column1" data-column="column1">
        @Html.ActionLink("Edit", "Edit", new { id = item.PersonID }) |
        @Html.ActionLink("Details", "Details", new { id = item.PersonID }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.PersonID })
        </td>
        </tr>
        }
        </tbody> *@